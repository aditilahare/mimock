{
	"info": {
		"_postman_id": "b1200a8b-85cb-40d9-aaba-6cfd520f4939",
		"name": "Mimock",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Mocks",
			"item": [
				{
					"name": "Create Mock",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "binaryFile",
									"contentType": "",
									"type": "file",
									"src": "/C:/Users/Aravind Venkatesan/OneDrive/Documents/sample.txt"
								},
								{
									"key": "route",
									"value": "/tester",
									"type": "text"
								},
								{
									"key": "httpMethod",
									"value": "POST",
									"type": "text"
								},
								{
									"key": "responseContentType",
									"value": "application/json",
									"type": "text"
								},
								{
									"key": "queryParams",
									"value": "serviceName=Student;",
									"type": "text"
								},
								{
									"key": "statusCode",
									"value": "200",
									"type": "text"
								},
								{
									"key": "description",
									"value": "awesome description",
									"type": "text"
								},
								{
									"key": "expectedTextResponse",
									"value": "expectedOutput",
									"type": "text"
								},
								{
									"key": "name",
									"value": "Awesome Mock 104",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "http://localhost:8080/api/mimock/v1/mocks",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"mimock",
								"v1",
								"mocks"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Mock",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "binaryFile",
									"contentType": "",
									"type": "file",
									"src": "/C:/Users/Aravind Venkatesan/OneDrive/Documents/sample.txt"
								},
								{
									"key": "route",
									"value": "/azure-api/deploy/v2",
									"type": "text"
								},
								{
									"key": "httpMethod",
									"value": "POST",
									"type": "text"
								},
								{
									"key": "responseContentType",
									"value": "application/json",
									"type": "text"
								},
								{
									"key": "queryParams",
									"value": "serviceName=Student;",
									"type": "text"
								},
								{
									"key": "statusCode",
									"value": "201",
									"type": "text"
								},
								{
									"key": "description",
									"value": "Azure v2",
									"type": "text"
								},
								{
									"key": "name",
									"value": "Updated Awesome Name 100",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "http://localhost:8080/api/mimock/v1/mocks/{{mockId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"mimock",
								"v1",
								"mocks",
								"{{mockId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get All Mocks",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/api/mimock/v1/mocks",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"mimock",
								"v1",
								"mocks"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get All Mocks With Pagination And Status Filter",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/api/mimock/v1/mocks/filter?status=NONE",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"mimock",
								"v1",
								"mocks",
								"filter"
							],
							"query": [
								{
									"key": "status",
									"value": "NONE"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Mock By Id",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/api/mimock/v1/mocks/{{mockId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"mimock",
								"v1",
								"mocks",
								"{{mockId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Mock By Id",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/api/mimock/v1/mocks/{{mockId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"mimock",
								"v1",
								"mocks",
								"{{mockId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Force Delete Mock By Id",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/api/mimock/v1/mocks/{{mockId}}:forceDelete",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"mimock",
								"v1",
								"mocks",
								"{{mockId}}:forceDelete"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete All Mocks",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/api/mimock/v1/mocks",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"mimock",
								"v1",
								"mocks"
							]
						}
					},
					"response": []
				},
				{
					"name": "Export Mocks CSV",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/api/mimock/v1/mocks/csv/export",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"mimock",
								"v1",
								"mocks",
								"csv",
								"export"
							]
						}
					},
					"response": []
				},
				{
					"name": "Export Mock CSV Template",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/api/mimock/v1/mocks/csv/template/export",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"mimock",
								"v1",
								"mocks",
								"csv",
								"template",
								"export"
							]
						}
					},
					"response": []
				},
				{
					"name": "Archive Mock",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/api/mimock/v1/mocks/{{mockId}}:archive",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"mimock",
								"v1",
								"mocks",
								"{{mockId}}:archive"
							]
						}
					},
					"response": []
				},
				{
					"name": "Unarchive Mock",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/api/mimock/v1/mocks/{{mockId}}:unarchive",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"mimock",
								"v1",
								"mocks",
								"{{mockId}}:unarchive"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Admin",
			"item": [
				{
					"name": "List All Supported HTTP Methods",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/api/mimock/v1/static-records/http-methods",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"mimock",
								"v1",
								"static-records",
								"http-methods"
							]
						}
					},
					"response": []
				},
				{
					"name": "List All Supported Entity Status",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/api/mimock/v1/static-records/entity-status",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"mimock",
								"v1",
								"static-records",
								"entity-status"
							]
						}
					},
					"response": []
				},
				{
					"name": "List All Supported Response Content Types",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/api/mimock/v1/static-records/response-content-types",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"mimock",
								"v1",
								"static-records",
								"response-content-types"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "mockId",
			"value": "f3bd4cb2-2af5-49b2-af39-9ec7addd571f",
			"type": "string"
		}
	]
}